Lang_46:

--------------------
real patch:
org.apache.commons.lang.StringEscapeUtils@86
- return escapeJavaStyleString(str, false);
+ return escapeJavaStyleString(str, false, false);

org.apache.commons.lang.StringEscapeUtils@102
- escapeJavaStyleString(out, str, false);
+ escapeJavaStyleString(out, str, false, false);

org.apache.commons.lang.StringEscapeUtils@127
- return escapeJavaStyleString(str, true);
+ return escapeJavaStyleString(str, true, true);

org.apache.commons.lang.StringEscapeUtils@143
- escapeJavaStyleString(out, str, true);
+ escapeJavaStyleString(out, str, true, true);

org.apache.commons.lang.StringEscapeUtils@154
- private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {
+ private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes, boolean escapeForwardSlash) {

org.apache.commons.lang.StringEscapeUtils@160
- escapeJavaStyleString(writer, str, escapeSingleQuotes);
+ escapeJavaStyleString(writer, str, escapeSingleQuotes, escapeForwardSlash);

org.apache.commons.lang.StringEscapeUtils@178
- private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {
+ private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote, boolean escapeForwardSlash) throws IOException {

org.apache.commons.lang.StringEscapeUtils@244
+ if (escapeForwardSlash) {
      out.write('\\');
+ }

--------------------
patch generated by TENURE:
org.apache.commons.lang.StringEscapeUtils@244
+ if (escapeSingleQuote) {
      out.write('\\');
+ }


# Semantically equivalent

# Explanation:
We find that in the real patch, the boolean values of "escapeSingleQuote" and "escapeForwardSlash" are always the same in each method call of "escapeJavaStyleString(...)", so the patch generated by TENURE directly uses the boolean value of "escapeSingleQuote" as the substitute for the new inserted parameter "escapeForwardSlash". This repair achieves the same repair effect.