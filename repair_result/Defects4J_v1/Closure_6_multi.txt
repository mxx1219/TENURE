Closure_6 (multi-fix):

========================================

--------------------
real patch:
com.google.javascript.jscomp.TypeValidator@405
- if ((leftType.isConstructor() || leftType.isEnumType()) && (rightType.isConstructor() || rightType.isEnumType())) {
-     registerMismatch(rightType, leftType, null);
- } else {
      mismatch(t, n, msg, rightType, leftType);
- }

--------------------
patch generated by TENURE:
com.google.javascript.jscomp.TypeValidator@405
- if ((leftType.isConstructor() || leftType.isEnumType()) && (rightType.isConstructor() || rightType.isEnumType())) {
+ if ((leftType.isConstructor() && leftType.isEnumType()) && (rightType.isConstructor() && rightType.isEnumType())) {


# Semantically equivalent

# Explanation:
The conditions "leftType.isConstructor()" and "leftType.isEnumType()" cannot be met at the same time, so the body corresponding to this if statement will never be executed, which is equivalent to being deleted.



========================================

--------------------
real patch:
com.google.javascript.jscomp.TypeValidator@366
- if ((leftType.isConstructor() || leftType.isEnumType()) && (rightType.isConstructor() || rightType.isEnumType())) {
-     registerMismatch(rightType, leftType, null);
- } else {
      ...
      rightType, leftType);
- }

--------------------
patch generated by TENURE:
com.google.javascript.jscomp.TypeValidator@366
- if ((leftType.isConstructor() || leftType.isEnumType()) && (rightType.isConstructor() || rightType.isEnumType())) {
+ if ((leftType.isConstructor() && leftType.isEnumType()) && (rightType.isConstructor() && rightType.isEnumType())) {


# Semantically equivalent

# Explanation:
The same as the above explanation.